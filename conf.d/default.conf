
server {
    listen       80;
    server_name  _;

    access_log  /var/log/nginx/access.log main;

	location ^~/@http/ {
        internal;
        rewrite ^/@http/([^/]+)/(\d+)/(.*)  /$3 break;
        resolver 8.8.8.8;
        proxy_set_header Host $1:$2;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto http;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass      http://$1:$2;
        client_max_body_size    1000m;
    }

    location ^~/@https/ {
        internal;
        rewrite ^/@https/([^/]+)/(\d+)/(.*)  /$3 break;
        resolver 8.8.8.8;
        proxy_set_header Host $1:$2;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass      https://$1:$2;
        client_max_body_size    1000m;
    }

    location / {

        content_by_lua_block {

        	local string = require("string")
        	local hash,_ = string.gsub(ngx.var.request_uri,"^/([A-Za-z0-9]*)","%1")

        	local tinyurl = require("tinyurl/tinyurl")
			local data,_ = tinyurl.http("Tinyurl.Get",{ hash = hash })

			if data and data.tinyurl and data.tinyurl.url then
				ngx.redirect(data.tinyurl.url)
			else
				ngx.exit(404)
			end

        }
    }
    
    location ~ /\.ht {
        deny  all;
    }

    location ~ /\.lua {
        deny  all;
    }

}
